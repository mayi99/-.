给你一个 32 位的有符号整数 x ，返回 x 中每位上的数字反转后的结果。
如果反转后整数超过 32 位的有符号整数的范围 [-2147483648,  2147483647] ，就返回 0。
假设环境不允许存储 64 位整数（有符号或无符号）。
 
示例 1：
输入：x = 123
输出：321

示例 2：
输入：x = -123
输出：-321

示例 3：
输入：x = 120
输出：21

示例 4：
输入：x = 0
输出：0

字符串方法反转
------------------
class Solution {
    public int reverse(int x) {
    String s = new StringBuilder(String.valueOf(x)).reverse().toString();
        try {
            if(s.endsWith("-")){
                return 0-Integer.valueOf(s.substring(0,s.length()-1));
            }else {
                return Integer.valueOf(s);
            }
        }catch (Exception e){
            return 0;
        }
    }
}
数学方法
------------------
public int reverse(int x) {
	int ans = 0;
        while (x != 0){
            int next = x % 10;
            // 计算是否会发生溢出
            if( (ans > Integer.MAX_VALUE / 10) || (ans == Integer.MAX_VALUE / 10 && next > 7 ) ){
                return 0;
            }
            // 计算是否溢出
            if((ans < Integer.MIN_VALUE / 10) || (ans == Integer.MIN_VALUE / 10 && next < -8)){
                return 0;
            }
            ans = ans * 10 + next;
            x /= 10;
        }

        return ans;
}